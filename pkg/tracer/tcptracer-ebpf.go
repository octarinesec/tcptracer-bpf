// Code generated by go-bindata.
// sources:
// ../dist/tcptracer-ebpf.o
// DO NOT EDIT!

package tracer

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tcptracerEbpfO = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x6f\x6c\x54\x57\x76\xbf\x6f\xec\xc1\xf6\x10\xd6\x4e\xd0\x24\x66\xd2\xa8\x26\x09\x5d\xd7\x8d\x88\x6d\x0c\x0c\xce\x3f\x87\x34\x59\xaf\x4b\x6b\x87\x30\x1b\x97\x6e\x3a\x4c\x86\x01\x0f\x63\x60\xf0\x0c\x64\x9e\x8d\x76\xbd\x4d\xd2\xba\xa3\x7c\x30\x9b\x54\xb5\x22\xd4\x7a\x8c\x59\xbc\x2b\x54\xd1\x8a\x16\xba\xd9\xca\x56\x12\xb5\x96\xba\x1f\x28\x9b\xae\x2c\x35\x95\xac\x2a\x5a\xb9\x29\x4a\xad\x34\xa2\x16\x42\x4c\x35\xf7\xfc\xde\xcc\x7b\xe7\xdd\xf7\x66\x0c\xec\xf6\x0b\x4f\x71\xae\xcf\x79\xf7\xdc\x73\xee\xb9\xe7\x9e\xfb\xbb\xf7\x5d\xf3\xdd\x17\x77\xbd\xe4\xd1\x34\x61\x3c\x9a\xf8\x5f\x51\xa2\x4a\x4f\xd7\xcb\xa6\xdf\xf1\xff\xc7\x85\x26\x66\x1f\x24\xde\xdb\x42\x88\xaf\x09\x21\x46\x7c\xcb\xf9\x02\xad\x47\x92\x92\x3f\x12\x58\x91\xf4\xec\x14\xd5\xab\xf1\x08\xb1\x9c\xcf\xe7\x67\xcf\x80\xae\x12\x62\x25\x9f\xcf\x37\x32\xa5\x97\xaa\x4b\xed\x7a\x0a\x34\xf8\x7f\x86\x52\x7f\xa8\x8f\xe9\xed\x96\x7a\x2e\xa1\x9d\x91\x40\x97\x4d\x6f\xb7\x42\xcf\xdb\xb2\xcf\x42\xf8\xc5\xd7\xe4\x1b\x7d\x0d\xf1\x2b\x91\xab\x12\x42\x1c\xac\x11\xa2\x49\x08\xf1\x06\xca\x50\x8d\x57\xe3\xf2\x5d\x2e\x7a\x67\x6b\x88\xf6\xd7\xdc\xa2\x7e\x1d\x03\xad\xdd\x24\x3a\x87\x7e\x79\xd0\xaf\x96\x56\xf2\x6f\x0a\xf5\xaa\x5e\x96\x76\x84\xaa\xae\xcb\xf6\xf4\xa1\x5a\xc9\x7f\xed\x81\xaf\xc8\x8f\x75\x90\x7b\x7f\x29\x4f\xe5\x22\xca\x05\x94\x57\x50\xce\xa3\x9c\x43\x79\x19\xe5\x05\x94\x33\x28\x27\x51\x4e\xa0\x1c\x47\x39\x86\x72\x14\x65\xa6\x68\xb7\x47\xda\x3d\x40\xfc\x40\x92\xec\x3f\xd6\x80\x71\xa2\x7a\xfa\x50\x23\xfa\xd7\x4c\xf5\x5a\x46\xc1\x6f\x02\xbf\x09\x7c\xd2\xa3\x27\x9b\x89\xef\x23\xfd\xfa\xf1\x56\xa2\xf7\x92\x5d\x7a\x3a\x48\xfe\xcb\x50\xb4\x8e\x64\x61\x7f\x0f\xd9\xaf\x67\xba\xe9\xfd\x50\x1f\xda\x47\x7f\xb3\x17\x2c\x7e\x88\x0c\xa5\xe5\xfb\x68\xcb\xa7\xa0\x33\xa0\xc9\x8f\xf1\xa1\x93\x92\x4e\xb4\x7c\x06\xfa\x3b\xa0\x7f\x81\xfa\x49\xd4\x5f\xc0\xfb\x51\xbc\x5f\xc2\xfb\xfd\x92\x3e\xe8\xa1\xf8\x89\xe8\xfb\x24\xdd\xfb\x7d\x1a\xb7\x88\x3e\x40\x65\x6a\x90\xea\x55\x51\xbd\xde\x77\x31\xae\x9d\x18\xbf\x16\x1a\xbf\x98\x16\x91\xfe\xf6\x6b\x27\x11\x47\xdf\xa7\xf8\xd6\x34\xc9\xf7\x8a\xbf\xa6\xb8\x40\x3c\x26\x02\xbb\xa5\x5c\xfd\x1f\x13\x3d\x9b\xa3\xb2\x46\x13\x62\x77\x3e\x9f\x37\xc6\x6f\x36\x5a\x8a\xdb\xc2\xd4\x8c\xe7\x48\x2e\x11\xa0\x7e\x78\xc5\x5f\xa0\x9f\xfd\x79\x2a\x6f\xd2\xfb\x96\x3d\x28\xaf\xc3\xce\x01\xbc\x5f\x41\x1c\xd0\xb8\x1b\xed\xd7\xaf\xb7\xdb\xd1\x0f\x3b\xaa\x4d\xfa\xf5\x63\x4d\x65\xe5\x6e\x2a\xe5\x9a\xcb\xca\xed\x31\xf5\xbb\x24\xd7\x5a\x56\xee\xba\x52\x8e\xe2\xb0\xfe\x41\x7b\xfd\x01\xd4\xaf\x55\xf8\x57\x3f\x46\x71\xab\x9f\x21\x7f\xa9\xf4\xad\x28\xfa\x17\x99\x86\xff\x7b\x28\x4f\x44\xce\xd0\x38\x44\x3b\x3b\x28\xfe\xa6\x8c\xf1\x08\x12\x9d\xbb\x8e\x71\xec\xa4\xfa\x67\x69\x5c\xa2\x7b\x9f\x96\xa5\xbf\x3a\x61\x89\xbb\x37\x50\xfa\xab\x28\x2e\x5f\xf5\x08\x91\xcf\x0b\xe1\xf7\x1c\x20\x5a\x03\xad\x51\x5c\x1b\xf9\x6b\x24\x30\xc0\xf2\x73\xc6\x92\x0f\xcc\xfd\x4a\xa2\x5f\x0d\xe8\x57\x03\xcb\xa7\xad\x6c\xfd\x18\x50\xe4\x57\xaf\xd8\x2d\x4b\xbf\xf6\x75\x99\x1f\xfd\xda\x33\xd2\x3f\x85\x79\xe0\x95\xef\x69\xde\x1b\xf6\x44\x03\x7b\x60\x0f\xf9\xaf\xfe\x25\xe7\x38\x74\x1f\xaf\x7e\xc7\xf1\xda\xa3\x18\xaf\x83\x02\x7e\x45\x59\xe8\xc7\x97\xf9\x7c\xde\xe8\xc7\x6b\x0d\x6d\x45\x3b\x35\x69\xdf\x1c\xe6\x5b\x2b\xb3\x9f\xc6\x59\xcf\x51\xfe\x54\xc5\x9b\x79\x3e\x70\xfb\x23\x39\xc4\x49\xe0\x53\xb4\xff\xb8\xa5\xfd\x44\x80\xe2\xa4\x7e\x8d\xbd\xdd\xeb\xae\x79\xc2\x88\xaf\xcf\xd0\xee\x06\x66\x37\xf2\x40\xae\xc9\xd1\xee\x15\x57\xbb\x11\xaf\x81\x45\xb4\xbf\x8e\xd9\x7d\x80\xda\xfd\x96\xbd\xdd\x03\xae\x76\x1f\x80\xdd\xbf\x40\xbb\xb4\x00\x47\x72\x7b\xa0\x6f\xc1\x86\x2f\x2a\x89\xcb\x72\xb8\xe6\xff\x0d\x4f\x35\x72\x3c\xd5\xc7\xe6\x6b\xb7\x4d\x6f\x9f\x1b\xae\x41\x9c\xf8\xd7\x50\x28\x57\x22\x57\x98\xa7\xfa\x01\x61\xab\xef\x86\xdb\x4a\xf8\xe9\x4b\xea\x47\x11\x3f\x2d\x13\x3d\xc5\xfb\xd1\x94\xb7\xd6\x0b\x11\x7e\xd2\x3e\x27\xfc\x74\x0c\xf8\x69\xe3\x92\xb0\xca\x01\x2f\x05\xb0\xde\x06\x80\x97\x30\x1f\x47\x02\xc0\x0f\x01\xe0\x87\x00\xf0\x46\x00\x78\x29\x00\xbc\x14\x00\x5e\x0a\x00\x2f\x05\x80\x97\x58\x3e\x2c\xe6\xcb\x2a\xe0\xa7\xce\x7e\xac\x9f\xfb\x80\x8b\x08\x3f\xe9\x29\xe0\xa6\xce\xa4\x65\x7d\xd5\x53\xb4\x3e\xea\x69\xe0\xa4\x1e\xe8\xe9\x04\xde\x4a\xb5\xe2\x7d\x10\xef\x61\x57\x27\xf0\x55\x0a\xf9\x2c\xdd\x8d\xf7\xe8\x47\x27\xf0\x55\x0a\xb8\xa9\x73\xc6\xd2\xef\x48\x1a\x78\xa9\xe7\xa7\xa0\x81\x97\x7a\xc8\x6f\xf1\x34\xf0\x52\xcf\x27\xa0\x81\x97\x7a\x7e\x8e\xfa\xc0\x4b\x3d\xf3\x78\x0f\xbc\xd4\xb3\x80\xf7\xc0\x41\xd5\xc0\x4b\xc7\x69\x1d\xea\xdd\x83\x71\xea\x01\x6e\x4b\x13\x8e\x8a\x1c\x07\xbe\xf2\x02\x37\xbd\x88\x7a\x7b\x8d\xf1\x0a\xa2\xa4\xf5\x32\xe4\xf9\xa1\x28\x84\xee\xec\x39\xc4\x5f\x8d\x10\x97\xf3\xf9\x7c\xfd\x36\xc4\xa5\x29\x7f\xb4\x9a\xd6\x29\xdb\x7a\x90\x43\xbb\x0f\x51\x3c\xe9\xb9\x56\xd0\x68\xc7\x14\xdf\x4d\x6c\xfe\xf6\x2b\xd7\xb3\xf7\xa8\x1f\xb5\x58\x2f\x50\x86\x6a\xdf\x65\x71\x0a\x3d\x88\xf3\x91\xc0\x32\xca\x25\xe4\xb3\x1b\x28\x57\xc0\x5f\x44\x3e\xc3\xfa\x71\x8c\xc6\x95\xe3\x9c\x82\x5d\x0d\x0e\xfd\xaf\xb5\xac\x83\xce\xf2\x8d\x4c\xbe\x69\x15\xf2\x66\xb9\xe5\x55\xea\xad\x65\xf2\x4b\x4a\xf9\xf2\xb8\xf0\xc6\x6d\xe2\xc2\x95\x55\xe2\xc2\xc5\x8a\x70\xc6\xa2\x23\xce\x50\xe2\xde\x1f\x22\x2e\xde\xa7\x3c\xa2\xff\x00\xf1\x71\x88\xf2\xc9\x6c\x84\xe4\x7b\x4f\x51\xa9\x9f\x43\xdc\x0c\x23\x9f\xcc\x60\xff\x98\xa5\x3c\x13\x9f\x46\x1c\xf5\x64\x80\x2b\x57\x80\x2b\x87\x19\xee\x3c\x49\x38\x52\x7b\x96\xec\xfc\x1e\xf4\x14\xf3\xef\x53\xc4\x7f\x9e\xe8\x12\x7e\x24\xff\xcc\x6e\xe4\xfc\xad\x92\x1e\xe9\xa9\x45\x3e\x6a\x40\xde\x6b\x64\x79\xbe\xcb\x32\xbf\xf5\x5c\x9f\x65\x9e\x9b\xfd\x15\x54\xe0\xcd\x50\x1d\x2d\x60\x86\x5f\x0e\x6a\x98\x77\x28\x1b\x25\x1c\x28\xe1\xb4\x47\x36\xd2\x42\x14\xaa\xd9\x60\xe9\x67\x39\xb9\xd7\x36\xd2\x00\xbe\xb1\x86\xde\x47\x0f\xd1\xb8\x18\xf3\x3b\x9a\x7d\x1c\xf6\x53\x7f\x3f\xd5\xc8\xbe\x44\xa0\x19\xfc\x46\xc6\x6f\x01\xbf\x01\xf3\xfa\x09\xdb\xba\xcd\xf3\x4d\xab\x32\xdf\xa0\xff\x26\xb9\xfe\x0a\xe4\x56\x83\x6f\x6a\x25\xce\x08\xb2\x71\xa3\x3c\xaf\x1f\xa4\xbc\xae\x0f\x24\x6d\x76\x2c\xb8\xe1\x01\x9c\x77\xf8\xeb\x1e\x21\x79\xc4\x73\x48\x7b\x58\xae\xf3\xb3\xc7\xd4\xe3\x52\xd8\x17\xd4\xc8\x7a\x0f\xca\x76\x78\x1c\x25\xb0\xbe\x55\x7a\xae\xe3\x07\x5e\xd4\xf1\xde\xaf\xad\x93\xfa\xef\x7e\xbb\x59\x6a\x97\xf9\x59\xd7\x68\xdd\x9e\x7d\x93\x68\x55\x9e\xb8\xa0\xc8\x4b\xf1\x1c\xd9\x13\xd2\x3e\xcf\x7b\x2c\x38\xfd\x02\xe2\x69\x19\x76\x2f\xa2\xbc\x99\x37\xf7\x27\x8a\x75\x46\x3f\xd5\x58\xb1\x7e\x4b\x9e\x3a\xd5\x54\x56\x6e\x59\x29\xd7\x5c\x56\x6e\x51\x95\x87\x4f\xb5\x96\x95\xbb\xa9\x94\x43\xfe\x6e\xb4\xd7\xef\x32\xe7\xef\x37\x4b\xe3\x47\x72\x46\xfe\xee\x72\xcc\xdf\x4b\xca\x7d\x3d\xfc\xdf\x33\x81\xfc\xba\x8c\xfc\x7a\x1a\xf9\x17\xe3\xd1\x42\x38\x2d\x8e\xfd\x5c\x22\x30\x45\xf5\xcf\xd2\xb8\x44\xf7\x4e\x53\x3e\xae\xfe\x7b\x59\xda\xf7\xf5\x7f\x27\xf9\xa5\x7d\xfd\x45\xa2\x8b\xf9\xf7\x6f\x48\xce\x76\xee\x49\xf3\xc7\x2b\xda\x05\x8f\xe7\x09\xd7\x78\x26\xfc\x78\x09\x38\x7e\x64\x18\x78\x7a\x18\xf8\x6c\xf8\x82\x2d\x5f\x1b\x71\x23\xf1\x44\x95\xd5\xbf\x6f\x4b\x1b\x0a\x79\x85\xfc\xab\x9f\x09\x2a\xfb\x39\xd2\x59\x3a\x2f\xd6\x64\xdc\xd2\xfa\x10\xc9\x5d\x44\x1c\xef\x01\x3d\x01\x7a\x00\xf4\x69\xd0\x83\xf0\xf3\x24\xcb\xbf\x58\x1f\x73\x53\x8c\x3f\x04\xf9\x69\xc8\xa7\xa9\x1c\xce\xa0\x3c\x89\xbc\x6d\xec\x27\x80\xf3\x73\x06\x4e\xa5\x75\x7b\x76\x1a\x7e\xa8\xa6\x38\x33\xd6\xa7\x46\x8f\xd5\xbf\x97\xbc\x74\x4e\x5f\xf0\xc7\x86\x0a\xc7\xa3\x4a\xfa\xee\x04\xe9\xbd\xe3\xfc\x71\x38\xef\x53\xae\xc7\x13\xb7\x87\x4b\x4f\xf5\x29\xed\x51\xe1\xd2\x2e\x15\xbe\x73\x91\xe7\xb8\x74\x62\x15\xf2\x65\x71\xa9\x8b\xde\x8a\x70\x69\x05\x79\x4d\x89\x4b\x2b\xc8\x6b\x4a\x5c\xea\x92\xd7\x16\x2b\xca\x6b\xab\xc4\xa5\xb9\x2e\xcb\xfe\x51\x3f\x8b\xf8\xc0\xfe\xac\xd7\x2f\xd0\x2e\xe2\xa5\x93\xe6\x87\x3e\x0d\x3c\x6a\xec\x13\xa7\x10\x3f\x2d\xd8\x67\xe2\x5c\x28\x11\xb8\x4a\xf3\x6e\x12\x78\xd4\x47\xfb\x4e\xbf\x77\x03\xb5\xdf\x41\xed\xfb\xab\x1f\x62\x79\xcf\xcf\xf2\xde\x7a\x87\xbc\xb7\x46\xe6\x3d\xf3\xfc\xba\xe0\x3a\xbf\x7c\xb6\xf5\xde\xa9\x3e\xe5\xc7\x6a\x96\x1f\xb1\xdf\x1e\xc6\x7e\x7c\x78\xc2\x96\x1f\x27\x7e\xa9\xf9\xf1\xb4\x25\x3f\xea\x98\xef\xfa\x14\xf2\x54\x8b\xf5\xfc\xc2\xc8\x67\xfa\x14\xce\x4b\x5a\xac\xe7\x1d\xf1\xdc\x15\x96\x27\xc7\xc0\xbf\xca\xf8\x59\xe8\xff\x04\xfa\xdf\x41\xde\x1c\x47\xf9\x1e\xf4\xcd\xb0\xfc\x39\x79\xdb\xf9\xb3\xdf\x94\x3f\xbd\xe2\x23\x92\x07\x7e\xe5\x78\xb5\x74\x6e\xd6\x5a\xa4\xe5\x3c\xa9\x45\xfc\xc6\x57\x89\x63\x8b\xe7\x5a\x4f\x90\x3c\x70\x6b\x48\x6b\x91\x71\x34\x72\x88\xf0\xff\x2c\xbe\xdb\x5c\x82\x9e\x91\x2c\xf9\x39\x9a\x25\x3f\x19\xfb\xcc\x59\x7c\x2f\x52\xcd\xcb\x79\xe5\x7e\xd8\x98\xcf\xf3\x8e\xf3\xf9\x13\xc5\x7c\x1e\xc9\x52\x3c\x25\xb2\x93\xb6\x38\x0f\xae\x0a\xd7\xd6\x13\x5e\x1f\x80\xff\x7e\xd0\xcc\xf6\x09\xd0\x13\xb8\x53\x3d\xaf\xb8\xe3\x67\x17\xbf\x4d\x2a\xd7\x3f\xd8\xc3\xec\x0e\x69\x4b\x0c\x4f\x8f\x97\xc1\xd3\x41\x2b\x9e\x36\xbe\x93\xb9\xd8\x33\xee\xf6\x9d\xcc\x45\x4e\x89\xa7\x8d\xf3\x10\x17\x39\x25\x9e\x36\xce\x43\x5c\xe4\x94\x78\xda\x38\x0f\xd9\x60\xaf\x1f\x34\xaf\x3b\xef\x96\xc6\xd3\x1a\xa7\xc1\x55\xe2\x69\xf8\x1f\xe7\x9a\x25\x3c\x3d\xcd\xf0\xf4\x0c\xc3\xd3\x3f\x62\x78\xfa\x3c\xf0\x34\x4d\x58\x3b\x9e\xa6\x0d\x71\x69\x5d\xa1\xf8\x33\xd6\x95\x90\xf6\x21\xd9\x6b\x8a\xdf\x42\x5c\x79\xc5\xdf\xde\x95\x38\x0c\x69\xd3\x0c\x87\x19\xe7\x9d\xe3\xb7\x87\xc3\x8c\x73\x36\x66\x8f\x0a\x87\x05\xdd\xce\xe9\x14\xf2\x1c\x87\x8d\xaf\x42\xbe\xe2\xf3\x41\x85\xde\x55\x9d\x0f\xba\xe8\x75\x3d\x1f\x74\x91\x73\x3d\x1f\x54\xcc\x87\xc5\x8a\xe6\xc3\x2a\x71\xd8\x34\xe2\xc2\xb8\x1f\x71\xc6\xf8\x1e\x30\x83\xf5\x1b\x71\xd2\x82\xf5\x3e\x07\xfc\x85\xef\x1e\xf1\x49\xc4\x8d\x8f\xd6\xfb\x38\xbe\x23\x27\xf6\x7e\x48\xf3\xe5\x1c\xf0\xd7\xf0\xc7\x94\x1f\xb7\x93\x3d\xbd\xdf\xa0\xd2\x5f\xf3\x07\x64\x27\xce\xc7\x7b\xbf\x6e\xf0\xfb\x65\xf9\x2a\x4e\xcd\xfc\x82\x3e\xe4\xbd\xea\x05\xed\xa5\x83\xff\x50\xb5\x57\x96\x7c\xfe\x35\xca\xe9\x67\x3a\xa7\x7b\x81\xce\xb5\x42\x9e\x11\xaa\x5f\xf6\x7c\xee\x44\xd1\xbf\x5e\xd3\x79\x15\x3f\x87\x1f\xc9\x76\x15\xd7\xa7\x2a\x39\x5f\xba\xe1\x27\xc2\x03\x46\xfb\xd1\xc0\x2e\xb6\x8e\xe1\xbb\x8e\x81\xaf\xa6\x28\x9f\x44\xf1\x9d\x27\x32\xf5\x13\xd0\xfb\x91\x97\xc8\xbf\x9f\xe2\xbc\x32\x81\xef\x3d\xf1\xa9\x0f\x19\xff\x10\xe4\x3f\x86\xfc\x20\xe6\x71\x12\x65\xda\x86\x1b\xfb\x14\xe7\xa0\xf1\xdc\x21\xb4\x8f\xfd\xef\x19\xb2\x23\x32\xbd\x0f\x79\x8f\x00\xd1\x2c\x1d\xcb\x16\xbf\xb3\xbc\x81\xd2\xef\x7d\x80\xde\x6f\x12\x6c\xdc\xea\x89\xef\xe7\xfc\xfb\x88\x6f\xc2\x69\x41\x17\x9c\x66\xec\x43\xf8\x7e\xb7\x9c\xdd\x51\x7c\xef\x8a\x76\xbe\xc7\xfc\x36\xc1\x70\xe7\xfb\xc0\x9d\x86\xff\x4e\xdb\xf0\xc6\xb8\x2b\xde\xff\xea\x16\xaf\x3f\xe9\x5a\xff\x8b\x5b\xbf\xda\x78\x9b\x64\xf1\x36\xcd\xe2\x6d\xc6\x21\xde\x7e\xe4\x10\x6f\xe7\xef\x28\xde\xee\x74\xdc\xbd\xe2\x1f\x7f\xa5\xfe\xd3\xa7\x8c\x7c\x89\x7d\x47\x27\xee\xb9\x19\xdf\x69\xa7\x90\x2f\xcf\x60\x7f\x84\xef\xaf\xc6\x3e\xc9\x3e\x9f\x47\x1d\xe6\xf3\x1f\xb1\xf9\xfc\x16\xfc\x3a\x86\xf2\x9d\x5f\x9a\x7f\xfb\xa5\x2f\x7f\x46\xed\xdb\xf6\x3f\xb8\x9f\x10\xe7\xf7\x07\xc8\xbf\x7c\x1f\xe4\xaf\x8b\x09\x3e\x1f\x96\x2b\xda\x07\xfd\xa1\x2c\x4b\xfb\xa0\x6f\xd3\x3e\x08\xfb\x0d\x63\xff\x93\xc8\x7e\x41\xeb\x4e\xf6\x1a\xf0\x4a\xf9\xf5\xf7\xda\x2a\xd6\xed\x1a\x7c\x8f\x37\xcb\x7f\xa1\x90\x1f\xc9\x02\x37\x65\x0d\xfc\x5e\x7e\x1f\xb6\xe8\xba\x0f\x73\x5e\xcf\x55\xf8\xb6\x30\x3e\x3e\x99\xbf\x28\xcf\x15\xfc\xbb\x29\xd3\x24\xb3\x70\xa6\x69\x53\xa6\x78\xff\x20\xdb\x0d\x7f\xdd\xb2\xe5\x35\xb7\x7b\x17\x97\x70\xae\xe0\x17\x94\xc7\x8d\xfd\x94\xc1\x0f\x69\xf7\xd1\x7d\x8e\x0a\xf0\xeb\x2d\x85\xff\x0a\xed\x68\x32\x8f\x93\x5d\xc6\xfb\x47\x36\x6a\x16\x3d\xf1\xb3\x34\xce\xf1\x69\x1a\xf7\x57\x21\x67\x6e\x7f\x0c\xed\xfb\xd0\xfe\x1a\xd9\xef\x31\xf4\xdb\x7e\xaf\x65\xec\x8e\xbe\xeb\xa0\x5d\xc5\x7d\x99\xd5\xb5\xdb\x73\xdb\xfb\xd2\xc2\xb8\x15\xe6\x83\xc7\xe4\xb7\xd2\xbe\xa0\x1b\xfb\x82\xff\xcc\x7b\x2c\x79\x12\xf7\x3e\x70\x6f\x81\xe3\x22\xbe\x6f\x88\x66\x27\x2c\x79\x31\x5a\xe6\xfe\x4b\x64\x0a\xfb\xa5\x16\xe0\x19\xdc\x9b\x89\x06\x3e\x86\xde\x2e\x96\x77\x4f\x63\xde\x94\xdf\xf7\x2a\xbf\x23\x61\xdf\xab\xc2\xcf\x17\xcd\xf7\xc9\x18\x7e\x8e\xe7\x90\x3f\x0c\x5c\x9b\xbb\xc6\xf0\xc0\x8f\x6d\x79\x76\x52\x91\x67\x23\x38\x17\xf3\x6b\xff\x04\xfc\x70\x51\xe9\x57\xbf\xf6\x11\xf4\x90\xbe\xd2\x79\x23\x70\x74\xee\xc7\x8c\xff\x0f\xa4\xdf\x94\xc7\xc7\x5c\xf2\xb8\xb1\x2f\xf6\x8a\x3f\xb9\xcb\xf1\x73\x3e\xef\xbb\xab\xf1\x73\x7b\xf7\xaa\x4a\x71\x65\x9c\x0b\x2e\xa0\xa4\x7b\x8c\xfa\x0c\xe2\xaa\xf8\x3d\xdd\x88\xab\xf2\xfb\xc8\xb9\x3b\xdc\x47\xaa\xcf\xd5\x2a\xdf\x3f\x5f\x70\x91\x37\xe2\xba\xa6\xce\xbe\x6f\xbe\xec\xb2\x3f\x2c\xc5\xf7\x15\x87\xf8\xbe\x5a\x51\x7c\x1b\xdf\xa5\x0c\x7c\x13\xf2\xe0\xbe\x00\xfa\x53\x7e\x1f\x56\x87\xf8\xa4\xf1\xd6\xa7\x69\xbc\x43\xd5\xb4\x91\x70\xda\x4f\x50\x36\x30\xed\xcf\xbc\x4f\x16\xfb\x47\x71\x08\x1c\x77\x0e\xf1\x36\x5c\xba\xff\xe7\x91\x71\x81\xfb\xd1\xd9\x6f\x33\x5c\x67\xfc\x7d\x02\xdf\x77\x25\x41\xff\x14\x74\x1a\xf8\x8c\xfc\x97\x68\x31\xee\xbf\x5c\x05\x3d\xcc\xe2\xf2\x24\xe2\x71\x14\xe5\x5b\x36\xff\xee\x53\xe6\x8f\x24\xf2\xc7\x73\xc8\x1f\x69\x87\xfc\xf1\x14\xc6\x31\xc3\xf2\x84\x71\xbf\x7b\x98\xf1\xb7\xda\xf2\x47\xb7\x1b\x0e\xc4\xdf\x99\xd8\x71\x36\xdd\x2b\xe9\xc5\xfd\x1c\xbf\x46\xf7\x4e\x7a\x5f\x00\x5d\xd5\x0c\xfd\x57\x98\xfe\x4d\xe0\x5f\x65\xfc\x47\x6f\x2b\xaf\x95\xf0\xe9\x35\x0b\x3e\x2d\xe1\x50\x3a\x87\x30\xee\x57\x47\x7d\x5f\x51\x7c\x14\xef\xd3\x2e\xd9\xd6\xe9\xaf\x5c\xd7\x69\x9f\xa4\x23\xc5\x75\x9a\x80\xa7\x59\x7e\x85\xdd\x93\x59\xba\x2b\xf7\x80\xed\xf7\x7e\x55\xf7\x7c\xed\xb8\xf9\x71\xa5\x7d\x4e\xfb\x4f\x8e\xd7\x4b\xf3\x8a\xe6\xbb\x7d\x1f\x35\x57\x9c\x47\xd5\x32\xbe\xe7\xd9\xbc\xb2\x9e\x2f\x1a\xe7\x89\xfc\x3e\x6d\xe9\xfe\x39\xee\x8d\x02\xe7\x1b\xe7\xe3\xe6\xf9\x72\xa5\xcc\xbe\xe6\xf2\x6d\xec\x1b\xb9\xff\xab\x4d\x3f\xa2\x5a\xdc\x7b\xf0\xdc\xf3\x8b\xfa\xd1\x30\x6f\xe4\xb4\xb9\xe7\x97\xe2\x73\xcf\x2f\xea\x47\x43\xde\x92\x78\xe6\x9e\x5f\x8a\x4f\xc1\x2f\xcd\xf7\xfc\x62\x7b\x8c\x79\x74\x2f\xef\x5a\x1f\xed\xde\x7a\xa4\x7c\x8c\x78\x19\xc3\xef\xf7\x1e\x7a\x36\x65\x9a\xe4\x7f\x3e\xf1\x8d\xbe\x5d\x82\xce\x1e\x05\x72\x71\xe1\xd1\x86\x77\x8b\xda\x93\x6b\xb5\x87\xcd\xf9\x59\x08\x91\x41\x59\xe0\x3d\x81\xdf\x17\x6a\x4b\xbc\x2e\x45\x3d\xfc\x49\x92\x18\x30\xd5\xc3\xb5\x10\x31\xe7\x2b\xf1\x4e\x1a\xc6\xad\x2b\xf1\xc6\xc1\x9a\x34\xd5\x03\xc4\x15\xf3\x26\x1d\x97\xf1\xfb\x68\x99\x41\x6e\x97\x73\xc3\x2b\x9a\xd7\x58\xf9\xe7\xab\x88\x5f\x5b\x63\xe5\xef\x00\x7f\x8e\xf1\x1f\x00\xbf\xab\xca\xca\xff\x4b\x0f\xf1\x07\x58\xfd\xef\x81\xdf\x54\x6b\xe5\xef\x05\xbf\x9b\xd9\xf3\x28\xec\xcc\xb0\xfa\x5f\x42\xef\x18\xe3\x7f\x04\xfe\x04\xb3\x27\x8e\xf6\x2f\xb3\xfa\x9d\xe0\xcf\x33\x7e\x9b\x94\xaf\x13\xdd\xcc\xfe\x3f\xf7\x10\x7f\x94\xf1\x75\xf0\x1b\x59\x3b\xbb\xc1\xef\x66\xfc\x97\xab\x89\xdf\xcf\xf8\xaf\xa3\xfe\x0c\xb3\x7f\x5a\xd2\x6b\xc5\x12\xe3\xfb\xc0\xcf\x78\xad\xfc\x63\x1e\xe2\xf7\xb3\x38\xe8\x01\x7f\x86\xd5\xdf\x88\x76\x16\x98\x3d\x37\x50\xbf\xb6\xce\xca\x7f\x1b\xf5\x67\xac\x6c\xf1\x5f\xa8\xcf\x93\xcc\x38\xf8\x03\x8c\xdf\x22\xfd\xb0\x4e\xf4\xb3\x5c\xed\x01\xbf\xd1\x67\xe5\xff\xac\x8a\xf8\x03\x8c\xff\x9b\xe0\x2f\xb0\xf6\x3d\xe0\x27\x59\xfb\x01\xb4\x1f\x64\xed\x9c\x46\xfd\x79\x36\xbe\x5f\x7a\x88\xbf\xc2\xe3\x1f\xed\xcc\x33\xff\xfc\x07\xda\x99\x59\x6b\xe5\x7f\x00\xfe\x04\xe3\xbf\xe3\x60\xff\x77\x0c\xfb\x19\x3f\x00\x3e\x9f\xe7\x9f\xc1\xce\x25\xc6\xbf\x21\xeb\xd7\x8b\x24\x8b\x9f\x7f\x06\x7f\x94\xf1\x77\x7a\x88\x3f\xc7\xe2\xe4\x73\xd4\xef\x63\x71\xf2\x1e\xf8\x13\x8c\xdf\x8e\x76\x56\x98\x7f\xbe\x59\x4d\x7c\xc1\xfc\xef\x03\xbf\x81\xf1\xff\x14\xed\x8c\xb3\xfd\xfb\x6f\x81\xdf\xc8\xec\xbf\x28\xe9\xfb\x8b\xf9\xd0\x78\xfe\x4d\xf2\xd7\xdb\xfc\x29\xe4\x79\x47\x95\x9d\x29\xf9\x5e\x07\x7e\x8d\x03\xbf\xce\x81\xbf\xd6\x81\xbf\xce\x81\x5f\xef\xc0\xbf\xdf\x81\xbf\xde\xc6\xab\x96\xe7\x22\xbf\x6e\xe3\xff\xae\x3c\xdf\x6d\xb2\xf1\xf7\xca\x73\xe7\x87\x6c\xfc\x39\xd9\x4e\xa3\x8d\xff\xac\x6c\xe7\xd7\x6c\xfc\x17\xe5\x7a\xf4\xb0\x8d\x3f\x28\xeb\xdb\xed\xff\x77\xc9\xb7\xfb\xe1\xaf\x24\xdf\xee\xb7\x7f\x95\xed\xdb\xc7\xeb\xb0\xe4\xdb\xc7\xe5\x5b\xb2\x1d\xbb\x7f\x6a\x64\x7d\xbb\x9f\x3f\x90\x7c\xfb\xb8\xbf\x22\xf9\xf6\xf1\x7d\x49\xfa\xcd\x6f\xe3\x9f\x97\x7e\x7b\xd0\xc6\x6f\x96\xf6\x3c\x62\xe3\x27\x65\x3b\x1b\x6c\xfc\x9f\xcb\x76\x02\x36\x7e\x37\xca\x42\x38\xef\x14\x42\x04\x19\x9d\x64\xf4\x05\x13\xfd\x72\xa1\x2f\x6b\x4a\xf4\x6e\x21\xc4\x4c\xad\xf5\xbd\xb9\xfd\x17\x58\xfb\x2f\xb0\xf6\x0b\xf4\x24\x6b\x7f\xbc\xca\x4a\x8b\x5a\xab\xbe\xa0\x89\x7e\x85\xe9\x2b\xd4\xbf\xc2\xe8\x66\xcd\x4a\xaf\x54\x59\xdb\xeb\xf7\x96\xe8\xde\x02\xde\xf5\x5a\xdf\x2f\x31\x7d\x8d\x75\x56\x7a\xc2\x57\xa2\xfb\xf0\x63\xd6\xd7\xc5\xf4\xcf\x30\x7a\xb4\xce\xaa\xbf\xd1\x67\xd5\xdf\xed\xb3\xea\xcb\xac\xb5\xd6\x5f\xb8\xcf\xaa\xbf\x9f\xe9\x5f\x66\xfa\x96\x3c\xcc\x3e\xe6\xef\x49\xe6\x8f\x45\x66\x5f\x86\xf5\xd7\xec\xff\xdf\x2e\xf8\xc3\x44\xbf\x88\xbd\xb8\x99\xde\xc7\xe8\x6e\xcd\xda\xbe\x91\x19\x0a\x6a\xb6\x0b\x81\x7f\xa5\x84\xe8\x20\x74\x18\xf4\x0e\x53\x7f\x0b\x74\x67\x21\x5f\x98\xe8\xa7\x0a\xfe\x35\xd1\x4f\x17\xd6\x1d\x13\xfd\x4c\x61\x3c\x4c\xf4\xb3\x42\x88\x9f\x98\xe8\xe7\x0a\xbf\x6c\x4e\xc7\x32\x69\x91\x18\x8a\xa5\x93\x43\x47\x5f\x8f\x85\xc3\xf1\x23\xb1\x74\x38\x9a\x4a\x84\x23\xd1\x68\x2c\x99\x16\x9b\x87\x62\x83\xc5\xd7\x4f\xf2\xb7\x87\x23\xc9\xd4\x93\x07\xf6\xc7\x8f\xa4\xd2\x91\xc1\xc1\xf0\x50\xcc\xd2\x56\x3a\x9a\x0c\x9f\xd8\x16\x8e\x1e\x3d\x72\x24\x16\x4d\x8b\x84\x9a\x6d\xd5\xa0\x7a\xa9\x7c\xc3\xf5\x74\xa8\xf5\x74\xb8\xe9\xe9\x70\xd4\x53\x7a\x23\xbb\x98\x8e\x26\xd3\x43\x91\x68\x6c\x28\x9c\x4a\x47\xd2\xc7\x53\xbc\xe3\xc9\xf8\xfe\x94\x08\x9f\x88\x0d\xa5\xe2\x47\x8f\x98\x4d\x3b\xb0\x3f\x8c\x3a\x45\xb3\x4c\x2c\xab\x49\xfc\x85\x8d\x6b\xee\x58\x2a\x96\x96\xb6\xc4\xb8\xe9\xa5\x17\xe6\xea\xd1\xc1\xa3\x29\x5b\x55\x62\x86\x07\xe3\xd1\xd8\x11\xbc\xdd\x1c\x1b\x08\x1f\x18\x8a\x1c\x8e\x89\xcd\xa9\xf4\x50\x3a\xf2\xba\xd8\x9c\xd2\x0f\x17\xca\x5d\x3b\x77\x6e\x0b\xef\xa0\xa2\x5d\x96\x6d\x28\xb7\x85\xdb\x64\xd9\x81\x72\x0b\xca\xb6\x22\x1d\x44\xf5\x20\xaa\x05\x51\x0d\x7c\x2a\xb7\x85\xb7\xd3\xeb\xed\x78\xbb\x1d\x6f\xb7\x17\xc7\x20\x1c\x3b\x11\x3b\x92\x0e\xc7\x93\x27\xb6\x11\x0f\x83\x94\x3a\x1a\x4d\x98\xb8\xe9\xe3\xc9\xc1\x58\x32\xbe\x9f\x58\xbb\x76\xee\xdc\x1a\xde\x46\x4d\x83\x6a\x07\xd9\x0e\xba\x0d\x34\x95\x6d\x28\xb7\x86\xb7\xa2\xda\x56\x54\xdb\x0a\xcb\xb6\xa2\xda\x56\x85\x65\x1d\x4a\xcb\x3a\xec\x96\x75\x50\xa3\x1d\xa4\x03\xd4\x96\x0e\x78\x18\x74\x3b\x5e\xb7\x75\x40\xa5\x2c\xb7\x87\xb7\xa0\xfa\x16\x78\x76\x0b\x06\x02\x7c\x2a\x83\xe1\x76\x54\x6b\x47\xab\xed\xa8\x0e\xba\x0d\xef\xdb\x40\x6f\x69\x43\x7d\x94\xed\x6d\xa8\x0f\xba\x0d\x74\x5b\x9b\xd8\x3c\x74\x74\x7f\x24\x1d\x29\x44\x49\xdb\xe6\x36\x88\xb7\x92\x7f\xda\x8d\xb4\x76\xc7\xcf\xc3\x1e\xa1\x44\xa1\x8b\xbb\xa8\xfc\x7d\xb6\x8f\xe1\x30\x56\xc3\x0f\xdb\x46\x17\xcf\x23\xf8\xc3\x8f\xc8\xd6\x69\xee\xf2\x19\xc6\x67\x70\x5f\xd4\x69\x42\x89\x7e\x2f\x7c\x93\x4a\xe3\x5c\xe5\x31\x7c\x5f\x34\xe4\x0d\xfe\xb2\x83\xfd\x06\x8e\xe7\xfb\x53\xae\xff\x9a\x50\xeb\x9f\x83\xfe\x3e\x93\x7e\xaf\x42\xff\x59\x07\xfd\xe3\x68\xb4\x5c\xff\x73\x0e\xfa\x1b\x7a\xac\x7a\x1e\x03\xf6\xe4\xfa\xc7\x1c\xf4\xd7\x62\x9d\x1e\x28\xd3\xff\xb7\x1c\xf4\x37\x41\xff\x3e\x93\xfe\x3a\x85\xfe\x79\x87\xf1\x4f\xd2\xb5\xed\xe2\x39\x95\x93\xfe\x8f\x1d\xc6\x7f\x14\xfa\xc7\x4d\xfa\xd7\x2a\xf4\xff\x8f\x83\xfe\x56\x03\x2a\xaf\x73\xd7\xff\xdf\x0e\xfa\x1b\x7e\x07\x76\x98\xf4\xaf\x53\xe8\xff\x0d\x07\xff\xb7\xb6\x50\x39\x59\xa6\xff\x8f\x3a\xf8\x7f\x1c\xfa\x93\x26\xfd\xf5\x0a\xfd\xa7\x1d\xfa\x7f\x05\x7f\x97\x3a\x2f\xdc\xf5\x4f\x38\xf4\x5f\x20\x7f\x34\x99\xf4\xdf\xaf\xd0\xff\xa6\x83\xfe\x09\xdc\xbf\xe1\xe7\x0d\x5c\xff\x77\x1d\xf4\x37\x41\x7f\xab\x49\xff\x7a\x85\xfe\xe7\x71\x5f\x93\xe7\xc0\x46\xfc\x7d\x08\xbf\xa7\xc0\xf3\xd7\x39\x8f\x5a\xbe\x35\x58\x99\x7c\xc8\x41\x7f\xf7\x8e\xca\xe4\x3f\x70\xd0\xbf\xaf\xb3\x32\xf9\x84\x83\xfe\xcc\x53\x95\xc9\xff\x8b\x83\xfe\xf1\xa7\x2b\x93\xef\x12\x6a\xf9\x99\x67\x2a\x93\xdf\xa1\xa9\xe5\xe7\x9e\xad\x4c\xfe\x31\x07\xf9\x85\xe7\x2a\x93\xef\xac\x26\xf9\x76\xc6\x5f\xc6\x02\xc6\xa6\x6f\x71\xfd\x34\x4a\xaf\x83\xff\x6e\x74\xa9\xf5\xf1\xf5\xf7\xf7\x1c\xec\x17\xcf\xab\xe5\x39\x7d\x3f\xf4\xb3\x63\x2e\x51\x0b\xf9\x72\xf3\x7f\x9d\x47\x3d\xff\xfa\x30\xff\xcc\xf9\x77\xa3\x62\xfe\x3d\xe6\xb1\xeb\x2e\x3c\x57\xa0\x7f\x11\x47\x2b\x1a\x62\xc5\x90\x37\x4e\x86\xfe\x2f\x00\x00\xff\xff\xf3\xb7\xc6\xae\x40\x5a\x00\x00")

func tcptracerEbpfOBytes() ([]byte, error) {
	return bindataRead(
		_tcptracerEbpfO,
		"tcptracer-ebpf.o",
	)
}

func tcptracerEbpfO() (*asset, error) {
	bytes, err := tcptracerEbpfOBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tcptracer-ebpf.o", size: 23104, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tcptracer-ebpf.o": tcptracerEbpfO,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"tcptracer-ebpf.o": &bintree{tcptracerEbpfO, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

